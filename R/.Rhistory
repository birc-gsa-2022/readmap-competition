cut_lang <- function(lang, proj) {
lang |> when(
(. == "Python") ~ str_replace(proj, "python-", ""),
(. == "Go")     ~ str_replace(proj, "go-", ""),
(. == "C")      ~ str_replace(proj, "c-cmake-", "")
)
}
rename_mine <- function(proj) {
proj |>
when(
str_starts(., "readmap") ~ {
x <- str_split(., "-", n = 2)
paste0(x[[1]][2], '-mailund')
},
~ proj
)
}
transform_projects <- function(data) {
data |>
mutate(
Tool = str_to_lower(Tool) |> str_replace_all("\\.", "-") |> str_replace("project-5-",""),
Tool = map_chr(Tool, rename_mine),
Language = map_chr(Tool, lang),
Tool = map2_chr(Language, Tool, cut_lang) |> str_to_title() |> str_replace_all("-", " "),
Language = fct_relevel(Language, "Python", "Go", "C"),
)
}
filter_genome <- function(data, chromlen) {
data |> filter(Chromosome.length == chromlen)
}
genome_summary <- function(nochrom, chromlen) {
paste0(nochrom, " chromosomes of length ", chromlen)
}
prep_title <- function(nochrom, chromlen) {
ggtitle("Preprocessing",
subtitle = genome_summary(nochrom, chromlen)
)
}
status <- read.table('../status.txt', header = TRUE) |>
transform(Project = str_replace(Project, "project-5-","")) |>
mutate(Language = map_chr(Project, lang)) |>
transform(Team = map2_chr(Language, Project, cut_lang)) |>
select(Team, Language, Status)
knitr::kable(status, "pipe")
pre_perf <- read.csv("../preprocessing.txt", header = TRUE) |>
pivot_longer(-(Chromosomes:Chromosome.length),
names_to = "Tool", values_to = "Time") |>
transform_projects()
chrom_lens <- unique(pre_perf$Chromosome.length)
for (clen in chrom_lens) {
pre_perf |>
filter_genome(clen) |>
mutate(TL = str_c(Tool, ' [', Language, ']')) |>
group_by(TL) |>
mutate(
meanTime = mean(Time),
TL = fct_reorder(TL, desc(meanTime))
) |>
ggplot(aes(x = TL, y = meanTime, colour = Language, fill = Language)) +
geom_violin() +
facet_grid(. ~ Chromosome.length, scales = "free_x", space = "free_x") +
xlab("") +
theme_classic() +
scale_fill_brewer(palette="Set2") +
scale_colour_brewer(palette="Set2") +
theme(legend.position="bottom",
axis.text.x = element_text(angle = -15, vjust = 1.5, hjust=0))
}
chrom_lens <- unique(pre_perf$Chromosome.length)
for (clen in chrom_lens) {
pre_perf |>
filter_genome(clen) |>
mutate(TL = str_c(Tool, ' [', Language, ']')) |>
group_by(TL) |>
mutate(
meanTime = mean(Time),
TL = fct_reorder(TL, desc(meanTime))
) |>
ggplot(aes(x = TL, y = meanTime, colour = Language, fill = Language)) +
geom_violin() +
facet_grid(. ~ Chromosome.length, scales = "free_x", space = "free_x") +
xlab("") +
theme_classic() +
scale_fill_brewer(palette="Set2") +
scale_colour_brewer(palette="Set2") +
theme(legend.position="bottom",
axis.text.x = element_text(angle = -15, vjust = 1.5, hjust=0))
}
for (clen in chrom_lens) {
pre_perf |>
filter_genome(clen)
}
print(pre_perf |>
filter_genome(clen) )
for (clen in chrom_lens) {
pre_perf |>
filter_genome(clen) |>
mutate(TL = str_c(Tool, ' [', Language, ']')) |>
group_by(TL) |>
mutate(
meanTime = mean(Time),
TL = fct_reorder(TL, desc(meanTime))
) |>
ggplot(aes(x = TL, y = meanTime, colour = Language, fill = Language)) +
geom_violin() +
facet_grid(. ~ Chromosome.length, scales = "free_x", space = "free_x") +
xlab("") +
theme_classic() +
scale_fill_brewer(palette="Set2") +
scale_colour_brewer(palette="Set2") +
theme(legend.position="bottom",
axis.text.x = element_text(angle = -15, vjust = 1.5, hjust=0)) |>
prep_title(10, clen)
}
for (clen in chrom_lens) {
pre_perf |>
filter_genome(clen) |>
mutate(TL = str_c(Tool, ' [', Language, ']')) |>
group_by(TL) |>
mutate(
meanTime = mean(Time),
TL = fct_reorder(TL, desc(meanTime))
) |>
ggplot(aes(x = TL, y = meanTime, colour = Language, fill = Language)) +
geom_violin() +
facet_grid(. ~ Chromosome.length, scales = "free_x", space = "free_x") +
xlab("") +
theme_classic() +
scale_fill_brewer(palette="Set2") +
scale_colour_brewer(palette="Set2") +
theme(legend.position="bottom",
axis.text.x = element_text(angle = -15, vjust = 1.5, hjust=0)) +
prep_title(10, clen)
}
for (clen in chrom_lens) {
plt <- pre_perf |>
filter_genome(clen) |>
mutate(TL = str_c(Tool, ' [', Language, ']')) |>
group_by(TL) |>
mutate(
meanTime = mean(Time),
TL = fct_reorder(TL, desc(meanTime))
) |>
ggplot(aes(x = TL, y = meanTime, colour = Language, fill = Language)) +
geom_violin() +
facet_grid(. ~ Chromosome.length, scales = "free_x", space = "free_x") +
xlab("") +
theme_classic() +
scale_fill_brewer(palette="Set2") +
scale_colour_brewer(palette="Set2") +
theme(legend.position="bottom",
axis.text.x = element_text(angle = -15, vjust = 1.5, hjust=0)) +
prep_title(10, clen)
print(plt)
}
for (clen in chrom_lens) {
plt <- pre_perf |>
filter_genome(clen) |>
mutate(TL = str_c(Tool, ' [', Language, ']')) |>
group_by(TL) |>
mutate(
meanTime = mean(Time),
TL = fct_reorder(TL, desc(meanTime))
) |>
ggplot(aes(x = TL, y = Time, colour = Language, fill = Language)) +
geom_violin() +
facet_grid(. ~ Chromosome.length, scales = "free_x", space = "free_x") +
xlab("") +
theme_classic() +
scale_fill_brewer(palette="Set2") +
scale_colour_brewer(palette="Set2") +
theme(legend.position="bottom",
axis.text.x = element_text(angle = -15, vjust = 1.5, hjust=0)) +
prep_title(10, clen)
print(plt)
}
for (clen in chrom_lens) {
plt <- pre_perf |>
filter_genome(clen) |>
mutate(TL = str_c(Tool, ' [', Language, ']')) |>
group_by(TL) |>
mutate(
meanTime = mean(Time),
TL = fct_reorder(TL, desc(Time))
) |>
ggplot(aes(x = TL, y = Time, colour = Language, fill = Language)) +
geom_violin() +
#facet_grid(. ~ Chromosome.length, scales = "free_x", space = "free_x") +
xlab("") +
theme_classic() +
scale_fill_brewer(palette="Set2") +
scale_colour_brewer(palette="Set2") +
theme(legend.position="bottom",
axis.text.x = element_text(angle = -15, vjust = 1.5, hjust=0)) +
prep_title(10, clen)
print(plt)
}
knitr::opts_chunk$set(echo = FALSE)
library(tidyverse)
lang <- function(proj) {
proj |>
str_to_lower() |>
when(
str_starts(., "python")    ~ "Python",
str_starts(., "go")        ~ "Go",
str_starts(., "c-cmake")   ~ "C",
~ "Unknown"
)
}
cut_lang <- function(lang, proj) {
lang |> when(
(. == "Python") ~ str_replace(proj, "python-", ""),
(. == "Go")     ~ str_replace(proj, "go-", ""),
(. == "C")      ~ str_replace(proj, "c-cmake-", "")
)
}
rename_mine <- function(proj) {
proj |>
when(
str_starts(., "readmap") ~ {
x <- str_split(., "-", n = 2)
paste0(x[[1]][2], '-mailund')
},
~ proj
)
}
transform_projects <- function(data) {
data |>
mutate(
Tool = str_to_lower(Tool) |> str_replace_all("\\.", "-") |> str_replace("project-5-",""),
Tool = map_chr(Tool, rename_mine),
Language = map_chr(Tool, lang),
Tool = map2_chr(Language, Tool, cut_lang) |> str_to_title() |> str_replace_all("-", " "),
Language = fct_relevel(Language, "Python", "Go", "C"),
)
}
filter_genome <- function(data, chromlen) {
data |> filter(Chromosome.length == chromlen)
}
genome_summary <- function(nochrom, chromlen) {
paste0(nochrom, " chromosomes of length ", chromlen)
}
prep_title <- function(nochrom, chromlen) {
ggtitle("Preprocessing",
subtitle = genome_summary(nochrom, chromlen)
)
}
status <- read.table('../status.txt', header = TRUE) |>
transform(Project = str_replace(Project, "project-5-","")) |>
mutate(Language = map_chr(Project, lang)) |>
transform(Team = map2_chr(Language, Project, cut_lang)) |>
select(Team, Language, Status)
knitr::kable(status, "pipe")
pre_perf <- read.csv("../preprocessing.txt", header = TRUE) |>
pivot_longer(-(Chromosomes:Chromosome.length),
names_to = "Tool", values_to = "Time") |>
transform_projects()
for (clen in chrom_lens) {
plt <- pre_perf |>
filter_genome(clen) |>
mutate(TL = str_c(Tool, ' [', Language, ']')) |>
group_by(TL) |>
mutate(
meanTime = mean(Time),
TL = fct_reorder(TL, desc(Time))
) |>
ggplot(aes(x = TL, y = Time, colour = Language, fill = Language)) +
geom_boxplot() +
#facet_grid(. ~ Chromosome.length, scales = "free_x", space = "free_x") +
xlab("") +
theme_classic() +
scale_fill_brewer(palette="Set2") +
scale_colour_brewer(palette="Set2") +
theme(legend.position="bottom",
axis.text.x = element_text(angle = -15, vjust = 1.5, hjust=0)) +
prep_title(10, clen)
print(plt)
}
knitr::opts_chunk$set(echo = FALSE)
library(tidyverse)
lang <- function(proj) {
proj |>
str_to_lower() |>
when(
str_starts(., "python")    ~ "Python",
str_starts(., "go")        ~ "Go",
str_starts(., "c-cmake")   ~ "C",
~ "Unknown"
)
}
cut_lang <- function(lang, proj) {
lang |> when(
(. == "Python") ~ str_replace(proj, "python-", ""),
(. == "Go")     ~ str_replace(proj, "go-", ""),
(. == "C")      ~ str_replace(proj, "c-cmake-", "")
)
}
rename_mine <- function(proj) {
proj |>
when(
str_starts(., "readmap") ~ {
x <- str_split(., "-", n = 2)
paste0(x[[1]][2], '-mailund')
},
~ proj
)
}
transform_projects <- function(data) {
data |>
mutate(
Tool = str_to_lower(Tool) |> str_replace_all("\\.", "-") |> str_replace("project-5-",""),
Tool = map_chr(Tool, rename_mine),
Language = map_chr(Tool, lang),
Tool = map2_chr(Language, Tool, cut_lang) |> str_to_title() |> str_replace_all("-", " "),
Language = fct_relevel(Language, "Python", "Go", "C"),
)
}
filter_genome <- function(data, chromlen) {
data |> filter(Chromosome.length == chromlen)
}
genome_summary <- function(nochrom, chromlen) {
paste0(nochrom, " chromosomes of length ", chromlen)
}
prep_title <- function(nochrom, chromlen) {
ggtitle("Preprocessing",
subtitle = genome_summary(nochrom, chromlen)
)
}
read_title <- function(chromlen,
noreads, readlen,
edits) {
ggtitle("Read mapping",
subtitle = paste0(
genome_summary(10, chromlen), "; ",
noreads, " reads of length ", readlen, "; ",
"max edit dist: ", edits
)
)
}
status <- read.table('../status.txt', header = TRUE) |>
transform(Project = str_replace(Project, "project-5-","")) |>
mutate(Language = map_chr(Project, lang)) |>
transform(Team = map2_chr(Language, Project, cut_lang)) |>
select(Team, Language, Status)
knitr::kable(status, "pipe")
pre_perf <- read.csv("../preprocessing.txt", header = TRUE) |>
pivot_longer(-(Chromosomes:Chromosome.length),
names_to = "Tool", values_to = "Time") |>
transform_projects()
chrom_lens <- unique(pre_perf$Chromosome.length)
for (clen in chrom_lens) {
plt <- pre_perf |>
filter_genome(clen) |>
mutate(TL = str_c(Tool, ' [', Language, ']')) |>
group_by(TL) |>
mutate(
meanTime = mean(Time),
TL = fct_reorder(TL, desc(Time))
) |>
ggplot(aes(x = TL, y = Time, colour = Language, fill = Language)) +
geom_boxplot() +
#facet_grid(. ~ Chromosome.length, scales = "free_x", space = "free_x") +
xlab("") +
theme_classic() +
scale_fill_brewer(palette="Set2") +
scale_colour_brewer(palette="Set2") +
theme(legend.position="bottom",
axis.text.x = element_text(angle = -15, vjust = 1.5, hjust=0)) +
prep_title(10, clen)
print(plt)
}
knitr::opts_chunk$set(echo = FALSE)
library(tidyverse)
lang <- function(proj) {
proj |>
str_to_lower() |>
when(
str_starts(., "python")    ~ "Python",
str_starts(., "go")        ~ "Go",
str_starts(., "c-cmake")   ~ "C",
~ "Unknown"
)
}
cut_lang <- function(lang, proj) {
lang |> when(
(. == "Python") ~ str_replace(proj, "python-", ""),
(. == "Go")     ~ str_replace(proj, "go-", ""),
(. == "C")      ~ str_replace(proj, "c-cmake-", "")
)
}
rename_mine <- function(proj) {
proj |>
when(
str_starts(., "readmap") ~ {
x <- str_split(., "-", n = 2)
paste0(x[[1]][2], '-mailund')
},
~ proj
)
}
transform_projects <- function(data) {
data |>
mutate(
Tool = str_to_lower(Tool) |> str_replace_all("\\.", "-") |> str_replace("project-5-",""),
Tool = map_chr(Tool, rename_mine),
Language = map_chr(Tool, lang),
Tool = map2_chr(Language, Tool, cut_lang) |> str_to_title() |> str_replace_all("-", " "),
Language = fct_relevel(Language, "Python", "Go", "C"),
)
}
filter_genome <- function(data, chromlen) {
data |> filter(Chromosome.length == chromlen)
}
genome_summary <- function(nochrom, chromlen) {
paste0(nochrom, " chromosomes of length ", chromlen)
}
prep_title <- function(nochrom, chromlen) {
ggtitle("Preprocessing",
subtitle = genome_summary(nochrom, chromlen)
)
}
read_title <- function(chromlen,
noreads, readlen,
edits) {
ggtitle("Read mapping",
subtitle = paste0(
genome_summary(10, chromlen), "; ",
noreads, " reads of length ", readlen, "; ",
"max edit dist: ", edits
)
)
}
status <- read.table('../status.txt', header = TRUE) |>
transform(Project = str_replace(Project, "project-5-","")) |>
mutate(Language = map_chr(Project, lang)) |>
transform(Team = map2_chr(Language, Project, cut_lang)) |>
select(Team, Language, Status)
knitr::kable(status, "pipe")
pre_perf <- read.csv("../preprocessing.txt", header = TRUE) |>
pivot_longer(-(Chromosomes:Chromosome.length),
names_to = "Tool", values_to = "Time") |>
transform_projects()
chrom_lens <- unique(pre_perf$Chromosome.length)
for (clen in chrom_lens) {
plt <- pre_perf |>
filter_genome(clen) |>
mutate(TL = str_c(Tool, ' [', Language, ']')) |>
group_by(TL) |>
mutate(
meanTime = mean(Time),
TL = fct_reorder(TL, desc(Time))
) |>
ggplot(aes(x = TL, y = Time, colour = Language, fill = Language)) +
geom_boxplot() +
#facet_grid(. ~ Chromosome.length, scales = "free_x", space = "free_x") +
xlab("") +
theme_classic() +
scale_fill_brewer(palette="Set2") +
scale_colour_brewer(palette="Set2") +
theme(legend.position="bottom",
axis.text.x = element_text(angle = -15, vjust = 1.5, hjust=0)) +
prep_title(10, clen)
print(plt)
}
status <- read.table('../status.txt', header = TRUE) |>
transform(Project = str_replace(Project, "project-5-","")) |>
mutate(Language = map_chr(Project, lang)) |>
transform(Team = map2_chr(Language, Project, cut_lang)) |>
select(Team, Language, Status)
knitr::kable(status, "pipe")
pre_perf <- read.csv("../preprocessing.txt", header = TRUE) |>
pivot_longer(-(Chromosomes:Chromosome.length),
names_to = "Tool", values_to = "Time") |>
transform_projects()
pre_perf$Chromosome.length
status <- read.table('../status.txt', header = TRUE) |>
transform(Project = str_replace(Project, "project-5-","")) |>
mutate(Language = map_chr(Project, lang)) |>
transform(Team = map2_chr(Language, Project, cut_lang)) |>
select(Team, Language, Status)
status <- read.table('../status.txt', header = TRUE) |>
transform(Project = str_replace(Project, "project-5-","")) |>
mutate(Language = map_chr(Project, lang)) |>
transform(Team = map2_chr(Language, Project, cut_lang)) |>
select(Team, Language, Status)
knitr::kable(status, "pipe")
pre_perf <- read.csv("../preprocessing.txt", header = TRUE) |>
pivot_longer(-(Chromosomes:Chromosome.length),
names_to = "Tool", values_to = "Time") |>
transform_projects()
chrom_lens <- unique(pre_perf$Chromosome.length)
for (clen in chrom_lens) {
plt <- pre_perf |>
filter_genome(clen) |>
mutate(TL = str_c(Tool, ' [', Language, ']')) |>
group_by(TL) |>
mutate(
meanTime = mean(Time),
TL = fct_reorder(TL, desc(Time))
) |>
ggplot(aes(x = TL, y = Time, colour = Language, fill = Language)) +
geom_boxplot() +
#facet_grid(. ~ Chromosome.length, scales = "free_x", space = "free_x") +
xlab("") +
theme_classic() +
scale_fill_brewer(palette="Set2") +
scale_colour_brewer(palette="Set2") +
theme(legend.position="bottom",
axis.text.x = element_text(angle = -15, vjust = 1.5, hjust=0)) +
prep_title(10, clen)
print(plt)
}
